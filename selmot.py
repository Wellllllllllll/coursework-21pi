import sqlite3
import telebot
from telebot import types
from datetime import datetime
import random


id_seller = [6131680389, 361109226, 64862928]
TOKEN = '6066868239:AAF6j0ELFVyuWa1khfDMCDLxiBghUMMxGt4' #@selmot_bot
bot = telebot.TeleBot(TOKEN)

global db
global sql

db = sqlite3.connect('./TuttyFrutty.db', check_same_thread=False) #–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –ë–∞–∑–∑–æ–π –î–∞–Ω–Ω—ã—Ö
sql = db.cursor() #–°–æ–∑–¥–∞–Ω–∏–µ –∫—É—Ä—Å–æ—Ä–∞

sql.execute("CREATE TABLE IF NOT EXISTS products (id INTEGER PRIMARY KEY AUTOINCREMENT,"
            "name TEXT, price BIGINT, count BIGINT, discount BIGINT DEFAULT 0,"
            "final_price BIGINT GENERATED ALWAYS AS (Price * (100 - Discount) / 100) STORED)") #–¢–∞–±–ª–∏—Ü–∞ —Å –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏

sql.execute("CREATE TABLE IF NOT EXISTS users (id INTEGER PRIMARY KEY AUTOINCREMENT,"
            "user_name TEXT, user_id BIGINT, balance BIGINT)") #–¢–∞–±–ª–∏—Ü–∞ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏

sql.execute("CREATE TABLE IF NOT EXISTS status (id INTEGER PRIMARY KEY AUTOINCREMENT,"
            "user_id BIGINT, order_id INT, order_status INT)") #–¢–∞–±–ª–∏—Ü–∞ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º –∑–∞–∫–∞–∑–æ–≤

sql.execute("CREATE TABLE IF NOT EXISTS cart (id INTEGER PRIMARY KEY AUTOINCREMENT,"
            "number_order, user_id BIGINT, id_product BIGINT, count BIGINT)") #–¢–∞–±–ª–∏—Ü–∞ —Å –∫–æ—Ä–∑–∏–Ω–∞–º–∏


@bot.message_handler(commands = ['start']) #–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
def register(message):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ï—Å–ª–∏ –æ–Ω —É–Ω–∏–∫–∞–ª—å–Ω—ã–π, —Ç–æ –µ–≥–æ —Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä—É–µ—Ç –∏ –ø–∏—à–µ—Ç "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!",
    –µ—Å–ª–∏ –æ–Ω –±—ã–ª —Ä–∞–Ω–µ–µ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, —Ç–æ –µ–º—É –ø–∏—à–µ—Ç '–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º!'"""
    user_id = message.from_user.id
    sql.execute("SELECT user_id FROM users WHERE user_id = ?", (user_id,))
    if sql.fetchone() is None:
        sql.execute(
            f"INSERT INTO users (user_name, user_id, balance) VALUES ('{message.from_user.username}', '{message.from_user.id}', {0})")
            #–í—Å—Ç–∞–≤–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è –≤ —Ç–∞–±–ª–∏—Ü—É. (–ù–∞–∑–≤–∞–Ω–∏–µ —è—á–µ–µ–∫) (–°–∞–º–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ)
        db.commit() #–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –ë–î
        bot.send_message(message.chat.id, f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {message.from_user.first_name}! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω.')
        buttons(message)
    else:
        bot.send_message(message.chat.id, f'C –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {message.from_user.first_name}! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω.')
        buttons(message)


def otzovikto(message): #–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Ç–∑—ã–≤–æ–≤
    text_for_otzyv = message.text
    if message.text:
        markup_inline = types.InlineKeyboardMarkup(row_width = 2)
        item_accept = types.InlineKeyboardButton(text = '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–¥–∞–≤—Ü—É', callback_data = 'publish_otz')
        item_decline = types.InlineKeyboardButton(text = '–û—Ç–∫–ª–æ–Ω–∏—Ç—å', callback_data = 'decline_otz')
        markup_inline.add(item_accept, item_decline)
        bot.send_message(message.chat.id, f"{text_for_otzyv}", reply_markup = markup_inline)


@bot.message_handler(commands = ['otzyv']) #–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /otzyv
def otzovik(message):
    msg = bot.send_message(message.chat.id, 'üìù –ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –æ—Ç–∑—ã–≤: ')
    bot.register_next_step_handler(msg, otzovikto)

@bot.message_handler(commands = ['menu']) #–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /menu
def buttons(message):
    markup_reply = types.ReplyKeyboardMarkup(resize_keyboard = True, row_width = 2) #–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    item_catalog = types.KeyboardButton(text = 'üìì –ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤')
    item_cart = types.KeyboardButton(text='üõí –ú–æ—è –∫–æ—Ä–∑–∏–Ω–∞')
    item_profile = types.KeyboardButton(text = 'üë®üèª‚Äçüíª –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å')
    markup_reply.add(item_catalog, item_cart, item_profile) #–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é –º–µ–Ω—é:',
        reply_markup = markup_reply
    )

def webAppKeyboard(): #—Å–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å webapp –∫–Ω–æ–ø–∫–æ–π
   keyboard = types.ReplyKeyboardMarkup(row_width=1) #—Å–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
   webAppTest = types.WebAppInfo("https://melnikmarina.github.io/WebApp/") #—Å–æ–∑–¥–∞–µ–º webappinfo - —Ñ–æ—Ä–º–∞—Ç —Ö—Ä–∞–Ω–µ–Ω–∏—è url
   one_butt = types.KeyboardButton(text="Selmot_shop", web_app=webAppTest) #—Å–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É —Ç–∏–ø–∞ webapp
   keyboard.add(one_butt) #–¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
   return keyboard #–≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É

@bot.message_handler(content_types="web_app_data") #–ø–æ–ª—É—á–∞–µ–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
def answer(webAppMes):
   product_ids=webAppMes.web_app_data.data
   number_ids=[]
   random_number = random.randint(10000000, 99999999)
   for i in range (0, len(product_ids)): #–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
       if (product_ids[i] != '"' and product_ids[i] != ',' and product_ids[i]!=' ' and product_ids[i]!=']'
               and product_ids[i]!='[' and product_ids[i]!='\n'):
           number_ids.append(int(product_ids[i])) #–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ –ë–∞–∑—É –î–∞–Ω–Ω—ã—Ö
           sql.execute(f"INSERT INTO cart (user_id,number_order, id_product, count)"
                       f"VALUES"
                       f"({webAppMes.chat.id},{random_number},{int(product_ids[i])},1)"
                       )
           db.commit()


   order_products=[]
   for i in range(0, len(number_ids)):
       sql.execute(f"SELECT DISTINCT name FROM products WHERE id = {number_ids[i]}")
       result = sql.fetchone()
       order_products.append(result)
   str=''
   for i in order_products:
       for j in i:
           if(j!= ')' and j!='(' and j!=','):
               str+=j
       str+='\n'
   bot.send_message(webAppMes.chat.id, f'üëï{str}')

   markup_menu = types.ReplyKeyboardMarkup(resize_keyboard=True)  # –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
   item_catalog = types.KeyboardButton(text='üìì –ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤')
   item_profile = types.KeyboardButton(text='üë®üèª‚Äçüíª –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å')
   item_cart = types.KeyboardButton(text='üõí –ú–æ—è –∫–æ—Ä–∑–∏–Ω–∞')
   markup_menu.add(item_catalog, item_profile, item_cart)  # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
   bot.send_message(webAppMes.chat.id, '–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:',
                    reply_markup=markup_menu)


@bot.message_handler(content_types = ['text']) #–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–∞
def get_text(message):
    user_id = message.from_user.id
    if message.text == 'üìì –ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤':
        bot.send_message(message.chat.id, '–ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –ø–æ–∫—É–ø–∫–∞–º–∏!',
                         reply_markup=webAppKeyboard())

    if message.text == 'üõí –ú–æ—è –∫–æ—Ä–∑–∏–Ω–∞':
        first_name = message.from_user.first_name; user_id = message.from_user.id
        sql.execute(f"SELECT DISTINCT name FROM products JOIN cart ON products.id = cart.id_product WHERE cart.user_id = '{user_id}'")

        result = sql.fetchall()
        str = ""; count = 1
        markup_menu = types.InlineKeyboardMarkup()  # –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        confirm = types.InlineKeyboardButton(text='–°–æ–≤–µ—Ä—à–∏—Ç—å –ø–æ–∫—É–ø–∫—É ‚úÖ', callback_data='confirm_cart')
        decline = types.InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑ ‚ùå', callback_data='cancel_cart')
        markup_menu.add(confirm, decline)
        if result:
            for i in result:
                item = i[0]
                str += f'–¢–æ–≤–∞—Ä #{count} - "{item}" üëï\n'
                count += 1

            bot.send_message(message.chat.id, f'{first_name}, –≤–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞:\n'
                                              f'\n{str}', reply_markup=markup_menu)
        else:
            bot.send_message(message.chat.id, f'{first_name}, –≤–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞.')

    elif message.text == 'üë®üèª‚Äçüíª –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å':
        markup_reply = types.ReplyKeyboardMarkup(resize_keyboard=True)
        —Åheck_balance = types.KeyboardButton(text = 'üíµ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –±–∞–ª–∞–Ω—Å')
        check_status = types.KeyboardButton(text='üí° –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞')
        go_back = types.KeyboardButton(text='‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑')
        delete = types.KeyboardButton(text='‚è™ –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é')
        seller_menu = types.KeyboardButton(text='üíº –ó–∞–π—Ç–∏ –≤ –º–µ–Ω—é –ø—Ä–æ–¥–∞–≤—Ü–∞')
        markup_reply.add(—Åheck_balance, check_status, go_back, delete,seller_menu)
        bot.send_message(message.chat.id, '–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç:',
                         reply_markup=markup_reply
                         )

    elif message.text == 'üíµ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –±–∞–ª–∞–Ω—Å':
        user_id = message.from_user.id
        sql.execute(f"SELECT balance FROM users WHERE user_id = {user_id}")
        result = sql.fetchone()
        if result: #–ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –∑–∞–ø–∏—Å—å –≤ –ë–î
            balance = result[0]
            bot.send_message(message.chat.id, f'–í–∞—à –±–∞–ª–∞–Ω—Å: {balance} üí≥')
        else: #–ï—Å–ª–∏ –µ—ë –Ω–µ—Ç, —Ç–æ–≥–¥–∞ –≤—ã–ø–æ–ª–Ω—è–µ–º –¥—Ä—É–≥–æ–µ —É—Å–ª–æ–≤–∏–µ
            bot.send_message(message.chat.id, f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å #{message.from_user.id} –Ω–µ –Ω–∞–π–¥–µ–Ω')

    elif message.text == 'üí° –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞':
        user_id = message.from_user.id
        now = datetime.now()
        datetime_str = now.strftime("%d.%m.%Y %H:%M")
        sql.execute(f"SELECT id, user_id, order_status, order_id FROM status WHERE user_id = {user_id}") #–í—ã–±–∏—Ä–∞–µ–º, —á—Ç–æ –¥–æ—Å—Ç–∞–µ–º. –í—ã–±–∏—Ä–∞–µ–º –æ—Ç–∫—É–¥–∞. –í—ã–±–∏—Ä–∞–µ–º —Ñ–∏–ª—å—Ç—Ä –¥–ª—è –æ—Ç–±–æ—Ä–∞
        results = sql.fetchall() #fetchall() –∑–∞–ø–∏—Å—ã–≤–∞–µ—à—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ —Å–æ–±—Ä–∞–ª –ø–æ –∑–∞–ø—Ä–æ—Å—É –≤ –ë–î
        order_list = ""
        if results:
            for result in results:
                id, user_id, order_status, order_id = result
                if order_status == 0:
                    order_list += f'\n–ó–∞–∫–∞–∑ #{order_id} —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω üìù –û–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è! \n'
                if order_status == 1:
                    order_list += f'\n–ó–∞–∫–∞–∑ #{order_id} –±—ã–ª –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω –ø—Ä–æ–¥–∞–≤—Ü–æ–º ‚úÖ –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è! \n'
                if order_status == 2:
                    order_list += f'\n–ó–∞–∫–∞–∑ #{order_id} –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø—Ä–æ–¥–∞–≤—Ü–æ–º üì¶ –ü—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≤—ã –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ - /otzyv\n'
            bot.send_message(message.chat.id, f'{message.from_user.first_name}, —Å–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –Ω–∞ {datetime_str}: \n'
                                              f'\n{order_list}')
        else:
            bot.send_message(message.chat.id, f'{message.from_user.first_name}, —É –≤–∞—Å –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ üò¶')

    elif message.text == '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑':
        user_id = message.from_user.id
        sql.execute(f"SELECT id, user_id, order_status FROM status WHERE user_id = {user_id}")
        result = sql.fetchone()
        if result is not None:
            id, user_id, order_status = result
            markup = types.InlineKeyboardMarkup() #–ö–Ω–æ–ø–∫–∏ –≤ —Å–∞–º–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
            confirm = types.InlineKeyboardButton(text="–î–∞ ‚úî", callback_data=f"confirm_delete") #callback_data –¥–ª—è —Ä–∞–±–æ—Ç—ã –≤ callback_handler
            cancel = types.InlineKeyboardButton(text="–ù–µ—Ç ‚úñ", callback_data=f"cancel_delete")
            markup.add(confirm, cancel)
            bot.send_message(message.chat.id,
                             f'–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —Å–≤–æ–∏ –∑–∞–∫–∞–∑—ã?',
                             reply_markup=markup)
            return id
        else:
            bot.send_message(message.chat.id,
                             f'{message.from_user.first_name}, —É –≤–∞—Å –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ üò¶')

    elif message.text == '‚è™ –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é':
        markup_menu = types.ReplyKeyboardMarkup(resize_keyboard=True)  # –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        item_catalog = types.KeyboardButton(text='üìì –ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤')
        item_profile = types.KeyboardButton(text='üë®üèª‚Äçüíª –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å')
        item_cart = types.KeyboardButton(text='üõí –ú–æ—è –∫–æ—Ä–∑–∏–Ω–∞')
        markup_menu.add(item_catalog, item_profile,item_cart)  # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        bot.send_message(message.chat.id, '–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:',
                         reply_markup = markup_menu)


    elif message.text == 'üíº –ó–∞–π—Ç–∏ –≤ –º–µ–Ω—é –ø—Ä–æ–¥–∞–≤—Ü–∞': #–ú–µ–Ω—é –ø—Ä–æ–¥–∞–≤—Ü–∞-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        user_id = message.from_user.id
        if user_id in id_seller:
            markup_menu = types.ReplyKeyboardMarkup(resize_keyboard=True)  # –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
            send = types.KeyboardButton(text='üì¢ –†–∞—Å—Å—ã–ª–∫–∞ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è–º')
            change_balance = types.KeyboardButton(text='üí≥ –ò–∑–º–µ–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å')
            work_products = types.KeyboardButton(text='üìÅ –†–∞–±–æ—Ç–∞ –Ω–∞–¥ —Ç–æ–≤–∞—Ä–∞–º–∏')
            list_products = types.KeyboardButton(text='üìì –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤')
            back = types.KeyboardButton(text='‚è™ –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é')
            markup_menu.add(send, change_balance, work_products, list_products, back)  # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
            bot.send_message(message.chat.id, f'–ú–µ–Ω—é –ø—Ä–æ–¥–∞–≤—Ü–∞.',
                             reply_markup= markup_menu) #–ë–æ–≥–¥–∞–Ω
        else:
            bot.send_message(message.chat.id, f'–í –¥–æ—Å—Ç—É–ø–µ –æ—Ç–∫–∞–∑–∞–Ω–æ.')

    elif message.text == 'üì¢ –†–∞—Å—Å—ã–ª–∫–∞ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è–º':
        msg = bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏')
        bot.register_next_step_handler(msg, distribution_go)

    elif message.text == 'üí≥ –ò–∑–º–µ–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å':
        msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–ï–≥–æ —Ç–µ–≥): ')
        bot.register_next_step_handler(msg, balance_change)

    elif message.text == 'üìì –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤':
        sql.execute(f'SELECT * FROM products')
        products_list = sql.fetchall()
        string = ""
        for product in products_list:
            id, name, price, count, discount, final_price = product
            string += f"\nID: {id}, –ù–∞–∑–≤–∞–Ω–∏–µ: {name}, –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {count}, –°–∫–∏–¥–∫–∞: {discount}, –¶–µ–Ω–∞: {final_price}\n"
        bot.send_message(message.chat.id, f'–°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤, –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –Ω–∞ –ø—Ä–æ–¥–∞–∂—É: \n{string}')

    elif message.text == 'üìÅ –†–∞–±–æ—Ç–∞ –Ω–∞–¥ —Ç–æ–≤–∞—Ä–∞–º–∏':
        sql.execute(f'SELECT * FROM products')
        products_list = sql.fetchall()
        string = ""
        for product in products_list:
            id, name, price, count, discount, final_price = product
            string += f"\nID: {id}, –ù–∞–∑–≤–∞–Ω–∏–µ: {name}, –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {count}, –°–∫–∏–¥–∫–∞: {discount}, –¶–µ–Ω–∞: {final_price}\n"
        bot.send_message(message.chat.id, f'–°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è: \n{string}')

        markup_menu = types.InlineKeyboardMarkup()  # –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        one = types.InlineKeyboardButton(text='1', callback_data='1')
        two = types.InlineKeyboardButton(text='2', callback_data='2')
        three = types.InlineKeyboardButton(text='3', callback_data='3')
        four = types.InlineKeyboardButton(text='4', callback_data='4')
        five = types.InlineKeyboardButton(text='5', callback_data='5')
        six = types.InlineKeyboardButton(text='6', callback_data='6')
        seven = types.InlineKeyboardButton(text='7', callback_data='7')
        eight = types.InlineKeyboardButton(text='8', callback_data='8')
        nine = types.InlineKeyboardButton(text='9', callback_data='9')
        markup_menu.add(one,two,three,four,five,six,seven,eight,nine)

        bot.send_message(message.chat.id, f'–í—ã–±–µ—Ä–∏—Ç–µ ID —Ç–æ–≤–∞—Ä–∞',
                         reply_markup=markup_menu)

def distribution_go(message): #–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏
    text_for_distribution = message.text #–ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –æ—Ç –ø—Ä–æ–¥–∞–≤—Ü–∞
    if message.text: #–ï—Å–ª–∏ —Ç–µ–∫—Å—Ç –µ—Å—Ç—å
        markup_inline = types.InlineKeyboardMarkup(row_width = 2)
        accept = types.InlineKeyboardButton(text = '–û—Ç–ø—Ä–∞–≤–∏—Ç—å', callback_data = 'publish')
        decline = types.InlineKeyboardButton(text = '–û—Ç–∫–ª–æ–Ω–∏—Ç—å', callback_data = 'decline')
        markup_inline.add(accept, decline)
        bot.send_message(message.chat.id, f"{text_for_distribution}", reply_markup = markup_inline)

def balance_change(message): #–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º ID –∏ —Å—É–º–º—É –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ —É–≤–µ–ª–∏—á–∏—Ç—å/—É–º–µ–Ω—å—à–∏—Ç—å –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    user_name = message.text #–ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –æ—Ç –ø—Ä–æ–¥–∞–≤—Ü–∞
    sql.execute(f'SELECT user_id FROM users WHERE user_name = "{user_name}"')
    result = sql.fetchone()
    if message.text: #–ï—Å–ª–∏ —Ç–µ–∫—Å—Ç –µ—Å—Ç—å
        if result: #–ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º
            user_id = result[0]
        else:
            bot.send_message(message.chat.id, f'–¢–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç')
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–≤–µ–ª–∏—á–∏—Ç—å –±–∞–ª–∞–Ω—Å:')
    bot.register_next_step_handler(message, set_balance, user_id)

def set_balance(message, user_id): #–§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –±–∞–ª–∞–Ω—Å–∞
    amount = int(message.text)
    sql.execute(f"UPDATE users SET balance = balance + {amount} where user_id = {user_id}")
    db.commit()
    bot.send_message(message.chat.id, '–ë–∞–ª–∞–Ω—Å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!')

def change_value(message, call_data, id_product): #–ò–∑–º–µ–Ω–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ ID –ø—Ä–æ–¥—É–∫—Ç–∞
    new_amount = message.text
    start = call_data
    if start.startswith('price_change'): #–ï—Å–ª–∏ –ø–æ–º–µ–Ω—è—Ç—å –Ω—É–∂–Ω–æ —Ü–µ–Ω—É
        action, id_product = start.split(';') #–î–æ—Å—Ç–∞—ë–º ID –ø—Ä–æ–¥—É–∫—Ç–∞
        sql.execute(f"UPDATE products SET price = {new_amount} where id = {id_product}")
        db.commit()
        bot.send_message(message.chat.id, f'–ó–Ω–∞—á–µ–Ω–∏–µ –±—ã–ª–æ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ. –ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: {new_amount}!')

    if start.startswith('count_change'): #–ï—Å–ª–∏ –ø–æ–º–µ–Ω—è—Ç—å –Ω—É–∂–Ω–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
        action, id_product = start.split(';') #–î–æ—Å—Ç–∞—ë–º ID –ø—Ä–æ–¥—É–∫—Ç–∞
        sql.execute(f"UPDATE products SET count = {new_amount} where id = {id_product}")
        db.commit()
        bot.send_message(message.chat.id, f'–ó–Ω–∞—á–µ–Ω–∏–µ –±—ã–ª–æ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ. –ù–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: {new_amount}!')

    if start.startswith('discount_change'): #–ï—Å–ª–∏ –ø–æ–º–µ–Ω—è—Ç—å –Ω—É–∂–Ω–æ —Å–∫–∏–¥–∫—É. –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤ –∏—Ç–æ–≥–æ–≤–æ–π —Ü–µ–Ω–µ –∫–æ—Ä–∑–∏–Ω—ã
        action, id_product = start.split(';') #–î–æ—Å—Ç–∞—ë–º ID –ø—Ä–æ–¥—É–∫—Ç–∞
        sql.execute(f"UPDATE products SET discount = {new_amount} where id = {id_product}")
        db.commit()
        bot.send_message(message.chat.id, f'–ó–Ω–∞—á–µ–Ω–∏–µ –±—ã–ª–æ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ. –°–∫–∏–¥–∫–∞: {new_amount}!')

@bot.callback_query_handler(func=lambda call: True)
def callback_handler(call):
    id_product = None
    if call.data == "confirm_delete": #–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
        user_id = call.message.chat.id
        sql.execute(f"DELETE FROM status WHERE user_id = {user_id}")
        db.commit()
        bot.send_message(call.message.chat.id, f'–í–∞—à –∑–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!')

    elif call.data == "cancel_delete": #–û—Ç–º–µ–Ω–∞ —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
        bot.send_message(call.message.chat.id, f'–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ —É–¥–∞–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞.')

    elif call.data == "confirm_cart":
        '''–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–º. –î–∞–ª—å—à–µ –∏–¥—ë—Ç –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ö–≤–∞—Ç–∏—Ç –ª–∏ —É –Ω–µ–≥–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –æ—Å—É—â–µ—Å—Ç–≤–ª–µ–Ω–∏—è –ø–æ–∫—É–ø–∫–∏.
        –ü–æ—Å–ª–µ —á–µ–≥–æ, –µ—Å–ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ, –±–æ—Ç —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç –∞–¥—Ä–µ—Å –∏ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞. –í —ç—Ç–æ—Ç –º–æ–º–µ–Ω—Ç
        —É–¥–∞–ª—è–µ—Ç—Å—è –∫–æ—Ä–∑–∏–Ω–∞ –∏ –∑–∞–±–∏—Ä–∞—é—Ç—Å—è –ø—Ä–æ–¥—É–∫—Ç—ã –∏–∑ "products" –∏ –æ—Ñ–æ—Ä–º–ª—è–µ—Ç—Å—è –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑ –≤ "status". 
        –û–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –ø—Ä–æ–¥–∞–≤—Ü—ã –ø–æ–ª—É—á–∞—é—Ç –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–≤–µ—Ä—à–∏–ª –ø–æ–∫—É–ø–∫—É –∏ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –µ–≥–æ –∑–∞–∫–∞–∑–∞.
        –í —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ –¥–µ–Ω–µ–≥ –Ω–µ—Ç, —Ç–æ–≥–¥–∞ –ø–æ–∫—É–ø–∞—Ç–µ–ª—å –Ω–µ —Å–º–æ–∂–µ—Ç –æ—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–∫—É–ø–∫—É –∏ –µ–≥–æ –∫–æ—Ä–∑–∏–Ω–∞ –æ–±–Ω—É–ª—è–µ—Ç—Å—è.'''
        user_id = call.message.chat.id
        sql.execute(f"SELECT balance FROM users WHERE user_id = {user_id}")
        balance = sql.fetchone()[0]
        final_sum = 0

        def change_balance(): #–ò–∑–º–µ–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ—Å–ª–µ —Å–æ–≤–µ—Ä—à–µ–Ω–∏—è –ø–æ–∫—É–ø–∫–∏
            sql.execute(f"UPDATE users SET balance = balance - {final_sum} where user_id = {user_id}")
            db.commit()

        sql.execute(f"SELECT id_product, count FROM cart where user_id = {user_id}") #–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –≤—Å–µ–π –∫–æ—Ä–∑–∏–Ω—ã
        rows = sql.fetchall()
        for row in rows:
            id_product, count = row
            sql.execute(f"SELECT final_price FROM products WHERE id = {id_product}")
            price = sql.fetchone()[0]
            final_sum += price*count

        def get_cart(message):  # –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∫–∞—Ä–∑–∏–Ω—ã —Å –ø–æ–ª—É—á–µ–Ω–∏–µ–º –∞–¥—Ä–µ—Å–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            address = message.text
            user_id = message.chat.id;
            user_name = message.chat.username
            sql.execute(f"SELECT number_order, id_product, count FROM cart where user_id = {user_id}")
            order_list = ""
            rows = sql.fetchall()
            order_id = rows[0][0]
            for row in rows:
                number_order, id_product, count = row
                sql.execute(f"UPDATE products SET count = count - {count} where id = {id_product}")
                db.commit()
                sql.execute(f"SELECT name FROM PRODUCTS WHERE id = {id_product}")
                name_product = sql.fetchone()
                order_list += f'–¢–æ–≤–∞—Ä: "{name_product[0]}", –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: {count}.\n'
            sql.execute(f"INSERT INTO status (user_id, order_id, order_status) VALUES ('{user_id}', '{order_id}', {0})")
            db.commit()
            sql.execute(f"DELETE FROM cart WHERE user_id = {user_id}")
            db.commit()
            change_balance()

            markup_inline = types.InlineKeyboardMarkup(row_width=2)
            accept = types.InlineKeyboardButton(text='–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', callback_data=f'push_order;{order_id}')
            decline = types.InlineKeyboardButton(text='–û—Ç–∫–ª–æ–Ω–∏—Ç—å', callback_data=f'decline_order;{order_id}')
            markup_inline.add(accept, decline)

            for id in id_seller:
                bot.send_message(id,
                                 f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{user_name} –æ—Ñ–æ—Ä–º–∏–ª –∑–∞–∫–∞–∑ #{order_id} üìß\n \n{order_list}\n'
                                 f'–ê–¥—Ä–µ—Å –ø–æ–∫—É–ø–∞—Ç–µ–ª—è: {address} üöõ\n–ò—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–∞: {final_sum} üí≥',
                                 reply_markup=markup_inline)

            bot.send_message(message.chat.id,f'–í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–∏–ª–∏ –∑–∞–∫–∞–∑ #{order_id} üìß\n \n{order_list}\n'
                                 f'–ê–¥—Ä–µ—Å –ø–æ–ª—É—á–µ–Ω–∏—è: {address} üöõ\n–ò—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–∞: {final_sum} üí≥')

        if final_sum <= balance: #–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ö–≤–∞—Ç–∞–µ—Ç –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è —Å–æ–≤–µ—Ä—à–µ–Ω–∏—è –ø–æ–∫—É–ø–∫–∏
            address_new = bot.send_message(call.message.chat.id, f'–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏ (–≥–æ—Ä–æ–¥, —É–ª–∏—Ü–∞, –¥–æ–º, –∫–≤–∞—Ä—Ç–∏—Ä–∞):')
            bot.register_next_step_handler(address_new, get_cart)
        else:
            user_id = call.message.chat.id
            bot.send_message(call.message.chat.id, f'–ù–∞ –≤–∞—à–µ–º —Å—á–µ—Ç—É –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤. –ù–µ —Ö–≤–∞—Ç–∞–µ—Ç {final_sum - balance}')


    elif call.data == "cancel_cart": #–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–º–µ–Ω—è–µ—Ç –∫–æ—Ä–∑–∏–Ω—É
        user_id = call.message.chat.id
        sql.execute(f"DELETE FROM cart WHERE user_id = {user_id}")
        db.commit()
        bot.send_message(call.message.chat.id, f'–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ —É–¥–∞–ª–µ–Ω–∞.')

    elif call.data == "publish_otz": #–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –æ—Ç–∑—ã–≤
        user_id = call.message.chat.id
        sql.execute(f"DELETE FROM status WHERE user_id = {user_id} and order_status = {2}")
        db.commit()
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                 text='‚úÖ –û—Ç–∑—ã–≤ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω!')
        for id in id_seller:
            bot.send_message(id, f'–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –Ω–æ–≤—ã–π –æ—Ç–∑—ã–≤: {call.message.text} üí¨')

    elif call.data == "decline_otz": #–û—Ç–∫–ª–æ–Ω–∏—Ç—å –æ—Ç–∑—ã–≤
        bot.edit_message_text(chat_id = call.message.chat.id, message_id = call.message.message_id, text = '‚ùå –û—Ç–∑—ã–≤ –æ—Ç–∫–ª–æ–Ω—ë–Ω')

    elif call.data == "publish": #–ï—Å–ª–∏ –ø—Ä–æ–¥–∞–≤–µ—Ü –≤—ã–±—Ä–∞–ª –æ—Ç–ø—Ä–∞–≤–∏—Ç—å
        sql.execute(f"SELECT user_id FROM users")  # –ó–∞–ø—Ä–æ—Å –≤ –ë–î –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö id
        list = sql.fetchall()  # –ø—Ä–µ–≤—Ä–∞—â–µ–Ω–∏–µ –≤ —Å–ø–∏—Å–æ–∫
        for id in list:
            id_to_say = id[0]  # —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å ID
            if id_to_say in id_seller:  # –µ—Å–ª–∏ id - –ø—Ä–æ–¥–∞–≤–µ—Ü, –æ–Ω –Ω–µ –ø–æ–ª—É—á–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ
                pass
            else:
                bot.send_message(id_to_say,f'{call.message.text}')

    elif call.data == "decline": #–ï—Å–ª–∏ –ø—Ä–æ–¥–∞–≤–µ—Ü –æ—Ç–∫–ª–æ–Ω–∏–ª
        bot.edit_message_text(chat_id = call.message.chat.id, message_id = call.message.message_id, text = '‚ùå –†–∞—Å—Å—ã–ª–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞')

    elif call.data in ['1', '2', '3', '4', '5', '6', '7', '8', '9',]: #–ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª—è –∫–∞–∫–æ–≥–æ ID –ø—Ä–æ–¥—É–∫—Ç–∞, —á—Ç–æ –º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å
        id_product = call.data
        markup_menu = types.InlineKeyboardMarkup()  # –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        price_change = types.InlineKeyboardButton(text='–¶–µ–Ω–∞ –ø—Ä–æ–¥—É–∫—Ç–∞', callback_data=f'price_change;{id_product}')
        count_change = types.InlineKeyboardButton(text='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ', callback_data=f'count_change;{id_product}')
        discount_change = types.InlineKeyboardButton(text='–°–∫–∏–¥–∫–∞', callback_data=f'discount_change;{id_product}')
        markup_menu.add(price_change, count_change, discount_change)
        sql.execute(f"SELECT name FROM products WHERE id = {id_product}")
        name_product = sql.fetchone()
        bot.send_message(call.message.chat.id, f'–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ç–æ–≤–∞—Ä: "{name_product[0]}". –ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å?',
                         reply_markup=markup_menu)

    elif call.data.startswith('price_change'): #–ï—Å–ª–∏ callback data –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –Ω–∞ ..., —Ç–æ–≥–¥–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —ç—Ç–æ —É—Å–ª–æ–≤–∏–µ
        action, id_product = call.data.split(';') #–î–æ—Å—Ç–∞—ë–º ID –ø—Ä–æ–¥—É–∫—Ç–∞ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π —Ä–∞–±–æ—Ç—ã —Å –Ω–µ—ë
        msg = bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: ')
        bot.register_next_step_handler(msg, change_value, call.data, id_product)

    elif call.data.startswith('count_change'): #–ï—Å–ª–∏ callback data –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –Ω–∞ ..., —Ç–æ–≥–¥–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —ç—Ç–æ —É—Å–ª–æ–≤–∏–µ
        action, id_product = call.data.split(';') #–î–æ—Å—Ç–∞—ë–º ID –ø—Ä–æ–¥—É–∫—Ç–∞ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π —Ä–∞–±–æ—Ç—ã —Å –Ω–µ—ë
        msg = bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: ')
        bot.register_next_step_handler(msg, change_value, call.data, id_product)

    elif call.data.startswith('discount_change'): #–ï—Å–ª–∏ callback data –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –Ω–∞ ..., —Ç–æ–≥–¥–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —ç—Ç–æ —É—Å–ª–æ–≤–∏–µ
        action, id_product = call.data.split(';') #–î–æ—Å—Ç–∞—ë–º ID –ø—Ä–æ–¥—É–∫—Ç–∞ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π —Ä–∞–±–æ—Ç—ã —Å –Ω–µ—ë
        msg = bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: ')
        bot.register_next_step_handler(msg, change_value, call.data, id_product)

    elif call.data.startswith('push_order'): #–ï—Å–ª–∏ callback data –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –Ω–∞ ..., —Ç–æ–≥–¥–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —ç—Ç–æ —É—Å–ª–æ–≤–∏–µ
        user_id = call.message.chat.id
        action, id_order = call.data.split(';') #–î–æ—Å—Ç–∞—ë–º ID –ø—Ä–æ–¥—É–∫—Ç–∞ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π —Ä–∞–±–æ—Ç—ã —Å –Ω–µ—ë
        sql.execute(f'SELECT user_id FROM status WHERE order_id = {id_order}')
        id_send = sql.fetchone() #–ó–∞–ø–∏—Å—ã–≤–∞–µ–º ID –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
        sql.execute(f'SELECT user_name FROM users WHERE user_id = {user_id}')
        seller = sql.fetchone() #–ó–∞–ø–∏—Å—ã–≤–∞–µ–º ID –ø—Ä–æ–¥–∞–≤—Ü–∞
        name_seller = seller[0]
        sql.execute(f'UPDATE status SET order_status = 2 WHERE order_id = {id_order}')
        db.commit() #–û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ –Ω–∞ 2
        id_to_send = id_send[0]
        random_number = random.randint(10000,99999) #–†–∞–Ω–¥–æ–º–Ω–æ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç—Ä–µ–∫-–Ω–æ–º–µ—Ä

        bot.send_message(id_to_send, f'–í–∞—à –∑–∞–∫–∞–∑ –±—ã–ª –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω –ø—Ä–æ–¥–∞–≤—Ü–æ–º @{name_seller}!\n'
                                     f'–¢—Ä–µ–∫-–Ω–æ–º–µ—Ä –≤–∞—à–µ–≥–æ –∑–∞–∫–∞–∑–∞: #{random_number}\n'
                                     f'–ü—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≤—ã –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ - /otzyv')

        bot.send_message(call.message.chat.id, f'–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª–∏ –∑–∞–∫–∞–∑!\n'
                                               f'–¢—Ä–µ–∫-–Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞: #{random_number}')



    elif call.data.startswith('decline_order'): #–û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –ø—Ä–æ–¥–∞–≤—Ü–æ–º
        action, id_order = call.data.split(';')
        sql.execute(f'SELECT user_id FROM status WHERE order_id = {id_order}')
        id_send = sql.fetchone()
        id_to_send = id_send[0]
        sql.execute(f'DELETE FROM status WHERE order_id = {id_order}')
        db.commit()
        bot.send_message(id_to_send, f'–í–∞—à –∑–∞–∫–∞–∑ —É–¥–∞–ª–µ–Ω.')
        bot.send_message(call.message.chat.id, '–í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–∏–ª–∏ –∑–∞–∫–∞–∑!')


bot.polling(none_stop=True) #–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –±–µ–∑ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
